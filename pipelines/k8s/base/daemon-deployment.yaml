# k8s/daemon-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dagster-daemon
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dagster-daemon
  template:
    metadata:
      labels:
        app: dagster-daemon
    spec:
      serviceAccountName: dagster-ksa
      volumes:
      - name: dagster-instance-volume
        configMap:
          name: dagster-instance
      containers:
      # Your Dagster daemon container
      - name: dagster-daemon
        image: us-central1-docker.pkg.dev/data-pipelines-450611/dagster-repo/dagster-app:latest
        command: ["dagster-daemon", "run"]
        volumeMounts:
        - name: dagster-instance-volume
          mountPath: /opt/dagster/dagster_home/dagster.yaml
          subPath: dagster.yaml
        env:
        - name: cloud_sql_user
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: cloud_sql_user
        - name: cloud_sql_password
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: cloud_sql_password
        - name: cloud_sql_postgres_db
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: cloud_sql_postgres_db
        # This points to the sidecar proxy
        - name: cloud_sql_postgres_host
          value: "127.0.0.1"
        - name: DAGSTER_HOME
          value: "/opt/dagster/dagster_home"
        # set the github api tokens
        - name: GITHUB_API_TREBOR
          valueFrom:
            secretKeyRef:
              name: github-api-secrets
              key: GITHUB_API_TREBOR
        - name: GITHUB_API_JACKATJ
          valueFrom:
            secretKeyRef:
              name: github-api-secrets
              key: GITHUB_API_JACKATJ
        - name: BITBUCKET_API
          valueFrom:
            secretKeyRef:
              name: bitbucket-api-secrets
              key: bitbucket_api_key

      # Cloud SQL Auth Proxy sidecar container (same as in the webserver)
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.33.9
        command:
          - "/cloud_sql_proxy"
          - "-instances=data-pipelines-450611:us-central1:builder-love=tcp:5432"
        securityContext:
          runAsNonRoot: true