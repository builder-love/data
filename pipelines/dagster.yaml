# pipelines/dagster.yaml
run_launcher:
  module: dagster_k8s
  class: K8sRunLauncher
  config:
    # k8s base config
    service_account_name: dagster-ksa
    instance_config_map: dagster-instance
    postgres_password_secret: cloudsql-db-credentials
    load_incluster_config: true
    job_image: us-central1-docker.pkg.dev/data-pipelines-450611/dagster-repo/dagster-app:latest

    # Use env_secrets to load all keys from these secrets as env vars
    env_secrets:
      - cloudsql-db-credentials
      - github-api-secrets
      - bitbucket-api-secrets

    # Use env_vars for simple key-value strings ONLY
    env_vars:
      - "cloud_sql_postgres_host=127.0.0.1"

    # Nest the sidecar definition inside run_k8s_config
    run_k8s_config:
      pod_spec_config:
        init_containers:
          - name: cloudsql-proxy
            image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.18.0
            restart_policy: Always
            command:
              - "cloud_sql_proxy"
              - "--port=5432"
              - "data-pipelines-450611:us-central1:builder-love"
            securityContext:
              runAsNonRoot: true
            resources:
              requests:
                memory: "1Gi"
                cpu: "500m"

# This file configures the Dagster instance 
run_coordinator:
  module: dagster.core.run_coordinator
  class: QueuedRunCoordinator
  config:
    max_concurrent_runs: 25
    tag_concurrency_limits:
      - key: "github_api_key1"
        value: "True"
        limit: 1
      - key: "github_api_key2"
        value: "True"
        limit: 1

telemetry:
  enabled: false

retention:
  schedule:
    purge_after_days: 180
  sensor:
    purge_after_days:
      skipped: 14
      failure: 45
      success: -1

# Configures where information about runs and structured logs are stored
storage:
  postgres:
    postgres_db:
      hostname: { "env": "cloud_sql_postgres_host" }
      username: { "env": "cloud_sql_user" }
      password: { "env": "cloud_sql_password" }
      db_name: { "env": "cloud_sql_postgres_db" } 
      port: 5432