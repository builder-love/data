availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/cloud_sql_user/versions/latest
    env: 'DB_USER'
  - versionName: projects/$PROJECT_ID/secrets/cloud_sql_password/versions/latest
    env: 'DB_PASSWORD'
  - versionName: projects/$PROJECT_ID/secrets/cloud_sql_instance_connection_name/versions/latest
    env: 'INSTANCE_CONNECTION_NAME'
  - versionName: projects/$PROJECT_ID/secrets/gcp_project_id/versions/latest
    env: 'GCP_PROJECT_ID'
  - versionName: projects/$PROJECT_ID/secrets/go_blockchain_ecosystem/versions/latest
    env: 'GH_PAT'
  - versionName: projects/$PROJECT_ID/secrets/bitbucket_api_key/versions/latest
    env: 'BB_KEY'

steps:
- name: 'gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.15.1-alpine'
  id: 'Start Proxy'
  entrypoint: 'sh'
  args:
    - '-c'
    - '/cloud_sql_proxy --project=$PROJECT_ID --quiet $$INSTANCE_CONNECTION_NAME &'
  secretEnv: ['INSTANCE_CONNECTION_NAME']

- name: 'gcr.io/cloud-builders/gcloud'
  id: 'Wait for Proxy'
  entrypoint: 'bash'
  args: ['-c', 'sleep 5']

- name: 'bash'
  id: 'Create .env File'
  secretEnv:
  - 'DB_USER'
  - 'DB_PASSWORD'
  - 'GCP_PROJECT_ID'
  - 'GH_PAT'
  - 'BB_KEY'
  env:
  - 'DAGSTER_ENV=stg'
  - 'DAGSTER_HOME=/opt/dagster/app'
  - 'DB_NAME=postgres'
  - 'DB_HOST=127.0.0.1'
  script: |
    echo "DAGSTER_ENV=$DAGSTER_ENV" > pipelines/.env
    echo "DAGSTER_HOME=$DAGSTER_HOME" >> pipelines/.env
    echo "cloud_sql_postgres_db=$DB_NAME" >> pipelines/.env
    echo "cloud_sql_postgres_host=$DB_HOST" >> pipelines/.env
    echo "cloud_sql_user=$$DB_USER" >> pipelines/.env
    echo "cloud_sql_password=$$DB_PASSWORD" >> pipelines/.env
    echo "gcp_project_id=$$GCP_PROJECT_ID" >> pipelines/.env
    echo "go_blockchain_ecosystem=$$GH_PAT" >> pipelines/.env
    echo "bitbucket_api_key=$$BB_KEY" >> pipelines/.env

- name: 'gcr.io/cloud-builders/docker'
  id: 'docker build'
  args: [
    'build',
    '--network=cloudbuild',
    '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/dagster-repo/dagster-app:$SHORT_SHA',
    '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/dagster-repo/dagster-app:latest',
    './pipelines'
  ]

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/dagster-repo/dagster-app']

- name: 'us-central1-docker.pkg.dev/cloud-builders/gke-deploy/latest'
  args:
  - 'run'
  - '--filename=pipelines/k8s/'
  - '--image=us-central1-docker.pkg.dev/$PROJECT_ID/dagster-repo/dagster-app=us-central1-docker.pkg.dev/$PROJECT_ID/dagster-repo/dagster-app:$SHORT_SHA'
  - '--location=us-central1-c'
  - '--cluster=dagster-cluster'

images:
- 'us-central1-docker.pkg.dev/$PROJECT_ID/dagster-repo/dagster-app:$SHORT_SHA'
- 'us-central1-docker.pkg.dev/$PROJECT_ID/dagster-repo/dagster-app:latest'

options:
  logging: CLOUD_LOGGING_ONLY