steps:
# 1. Start the proxy using its default entrypoint and run it as a background service.
- name: 'gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.15.1-alpine'
  id: 'Start-Proxy-Service'
  # We have REMOVED the 'entrypoint' line, so it uses the container's default.
  args:
    - '--structured-logs'
    # The hardcoded instance name is passed directly as an argument.
    - 'data-pipelines-450611:us-central1:builder-love'
  # The 'waitFor' key with '-' tells Cloud Build to start this step
  # but not wait for it to finish before starting the next one.
  waitFor: ['-']

# 2. Health check to confirm the proxy is listening.
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'Wait-for-Proxy'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    apt-get update && apt-get install -y netcat-openbsd
    echo "Waiting for proxy..."
    for i in {1..30}; do
      if nc -z 127.0.0.1 5432; then
        echo "Proxy is ready. Connection successful! âœ…"
        exit 0
      fi
      sleep 1
    done
    echo "Proxy did not start in time."
    exit 1
  waitFor: ['Start-Proxy-Service']

options:
  logging: CLOUD_LOGGING_ONLY