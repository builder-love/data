# cloudbuild.yaml
steps:
# 1. Access the dbt environment variables from Secret Manager
- name: 'gcr.io/cloud-sdk-gcloud/gcloud'
  entrypoint: 'sh'
  args:
  - '-c'
  - 'gcloud secrets versions access latest --secret="dagster-env-list" > .env'

# 2. Build the Docker image using the secret
# The ID 'dbt-prod-env' makes the .env file available inside the build at /run/secrets/dbt-prod-env
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '--secret=id=env.list,src=.env', # This maps the .env file to the secret mount in your Dockerfile
    '-t', 'gcr.io/$PROJECT_ID/dagster-app:$SHORT_SHA',
    '-t', 'gcr.io/$PROJECT_ID/dagster-app:latest',
    '.'
  ]

# 3. Push the image to Google Container Registry (or Artifact Registry)
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/dagster-app']

# 4. Deploy to GKE by updating the image for the deployment
- name: 'gcr.io/cloud-builders/gke-deploy'
  args:
  - 'run'
  - '--filename=k8s/' # Point to your manifest directory
  - '--image=gcr.io/$PROJECT_ID/dagster-app=$IMAGE_URL' # Specifies which container image to update
  - '--location=us-central1-c' 
  - '--cluster=dagster-cluster'

# This substitutes the specific image tag for the deployment
substitutions:
  _IMAGE_URL: 'gcr.io/${PROJECT_ID}/dagster-app:${SHORT_SHA}'

# Defines which images to push after a successful build
images:
  - 'gcr.io/$PROJECT_ID/dagster-app:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/dagster-app:latest'

options:
  logging: CLOUD_LOGGING_ONLY