# 1. Define which secrets to make available to the build
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/dagster-env-list/versions/latest
    env: 'DAGSTER_ENV_LIST' # Maps the secret to this environment variable

steps:
# 2. Write the secret from the environment variable into a .env file
# This step replaces your original gcloud command.
- name: 'bash'
  args:
  - '-c'
  - 'echo "$$DAGSTER_ENV_LIST" > .env' # $$ is used to escape the $ for Cloud Build

# 3. Build the Docker image using the secret file
- name: 'us-central1-docker.pkg.dev/cloud-builders/docker/latest'
  args: [
    'build',
    '--secret=id=env.list,src=.env',
    '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/dagster-repo/dagster-app:$SHORT_SHA',
    '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/dagster-repo/dagster-app:latest',
    './pipelines'
  ]

# 4. Push the image to Artifact Registry
- name: 'us-central1-docker.pkg.dev/cloud-builders/docker/latest'
  args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/dagster-repo/dagster-app']

# 5. Deploy to GKE by updating the image for the deployment
- name: 'us-central1-docker.pkg.dev/cloud-builders/gke-deploy/latest'
  args:
  - 'run'
  - '--filename=pipelines/k8s/' # Correct path to k8s manifests
  # The --image flag uses the format: KEY_IN_YAML=NEW_IMAGE_WITH_TAG
  - '--image=us-central1-docker.pkg.dev/$PROJECT_ID/dagster-repo/dagster-app=us-central1-docker.pkg.dev/$PROJECT_ID/dagster-repo/dagster-app:$SHORT_SHA'
  - '--location=us-central1-c'
  - '--cluster=dagster-cluster'

# Defines which images to push after a successful build
images:
- 'us-central1-docker.pkg.dev/$PROJECT_ID/dagster-repo/dagster-app:$SHORT_SHA'
- 'us-central1-docker.pkg.dev/$PROJECT_ID/dagster-repo/dagster-app:latest'

# Send logs only to Cloud Logging
options:
  logging: CLOUD_LOGGING_ONLY